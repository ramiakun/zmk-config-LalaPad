#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 5 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 2 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: sensor_scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
            label = "SCROLL_UP_DOWN";
        };

        scroll_down_up: sensor_scroll_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "SCROLL_DOWN_UP";
        };

        scroll_left_right: sensor_scroll_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
            label = "SCROLL_LEFT_RIGHT";
        };

        scroll_right_left: sensor_scroll_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
            label = "SCROLL_RIGHT_LEFT";
        };

        volume_up_down: sensor_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
            label = "VOLUME_UP_DOWN";
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_down_up>, <&scroll_left_right>;

            bindings = <
&kp GRAVE  &kp Q         &kp W           &kp E     &kp R        &kp T             &kp Y          &kp U          &kp I            &kp O       &kp P            &mt EQUAL MINUS
&kp TAB    &kp A         &kp S           &kp D     &kp F        &kp G             &kp H          &kp J          &kp K            &kp L       &mt2 SEMI LBKT   &mt2 SQT RBKT
&kp LSHFT  &kp Z         &kp X           &kp C     &kp V        &kp B             &kp N          &kp M          &kp COMMA        &kp PERIOD  &mt2 UP SLASH    &kp BSLH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT    &mo 2     &lt 5 SPACE  &lt 5 LANG2       &lt 4 LANG1    &kp BACKSPACE  &mo 3            &kp RCTRL   &kp RIGHT_SHIFT  &kp CAPSLOCK
                         &kp LANGUAGE_2  &kp CAPS  &to 1        &kp LANG_HANGEUL  &allow_pageup  &allow_home    &allow_pagedown  &allow_end
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&kp GRAVE       &kp Q         &kp L           &kp E         &mt PERIOD COMMA  &mt NON_US_BACKSLASH SLASH  &kp F             &kp W          &kp R            &kp Y       &kp P            &mt LEFT_BRACKET RIGHT_BRACKET
&kp TAB         &kp U         &kp I           &kp A         &kp O             &mt EQUAL MINUS             &kp K             &kp T          &kp N            &kp S       &kp H            &mt LESS_THAN GREATER_THAN
&kp LEFT_SHIFT  &kp Z         &kp X           &kp C         &kp V             &mt SEMICOLON SQT           &kp G             &kp D          &kp M            &kp J       &kp B            &mt LEFT_PARENTHESIS RPAR
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT    &mo 2         &lt 5 SPACE       &lt 5 LANGUAGE_2            &lt 4 LANGUAGE_1  &kp BACKSPACE  &mo 3            &kp RCTRL   &kp RIGHT_SHIFT  &kp CAPS
                              &kp LANGUAGE_2  &kp CAPSLOCK  &to 0             &kp LANGUAGE_1              &allow_pageup     &allow_home    &allow_pagedown  &allow_end
            >;

            sensor-bindings = <&scroll_down_up>, <&scroll_left_right>;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_down_up>;

            bindings = <
&kp TILDE       &kp EXCLAMATION    &kp AT_SIGN                 &kp HASH               &kp DOLLAR                              &kp PERCENT                     &kp ESC        &kp HOME     &kp UP_ARROW    &kp END        &kp PRINTSCREEN  &trans
&kp TAB         &kp CARET          &kp AMPERSAND               &kp ASTERISK           &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACKET LEFT_BRACKET  &kp BACKSPACE  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp F2           &trans
&kp LEFT_SHIFT  &mt PIPE QUESTION  &mt NON_US_BACKSLASH SLASH  &mt SQT DOUBLE_QUOTES  &mt RIGHT_BRACE LEFT_BRACE              &mt GREATER_THAN LESS_THAN      &kp DEL        &kp PAGE_UP  &kp INS         &kp PAGE_DOWN  &kp RIGHT_ALT    &trans
&kp LCTRL       &trans             &trans                      &trans                 &trans                                  &kp CAPS                        &trans         &kp SPACE    &kp ENTER       &trans         &trans           &trans
                                   &trans                      &trans                 &trans                                  &trans                          &trans         &trans       &trans          &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&kp TILDE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp HOME       &kp END        &kp SLASH     &kp KP_N7        &kp KP_NUMBER_8    &kp KP_NUMBER_9
&kp TAB         &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0    &kp BACKSPACE  &kp MINUS      &kp ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans        &trans    &kp PAGE_UP    &kp PAGE_DOWN  &kp PLUS      &kp KP_NUMBER_1  &kp KP_NUMBER_2    &kp KP_NUMBER_3
&kp LCTRL       &trans        &trans        &kp LCTRL     &kp SPACE     &kp CAPS  &trans         &trans         &trans        &kp N0           &mt2 PERIOD COMMA  &kp ENTER
                              &trans        &trans        &trans        &trans    &trans         &trans         &trans        &trans
            >;

            sensor-bindings = <&scroll_down_up>, <&scroll_down_up>;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&volume_up_down>, <&volume_up_down>;

            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans   &trans   &trans   &trans   &trans   &trans        &trans        &trans          &trans        &trans          &trans
                 &trans   &trans   &trans   &trans   &trans        &trans        &trans          &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans          &trans  &mkp MB4   &trans     &mkp MB5   &trans  &trans  &trans     &trans     &trans     &trans  &trans
&kp TAB         &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &none   &none
&kp LEFT_SHIFT  &trans  &trans     &trans     &trans     &trans  &trans  &mkp MB4   &none      &mkp MB5   &trans  &trans
&kp LCTRL       &trans  &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans     &trans  &trans
                        &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>, <&scroll_up_down>;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
